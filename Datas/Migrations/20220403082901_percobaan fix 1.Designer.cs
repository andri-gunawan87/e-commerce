// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_commerce.Datas;

#nullable disable

namespace e_commerce.Datas.Migrations
{
    [DbContext(typeof(ecommerceContext))]
    [Migration("20220403082901_percobaan fix 1")]
    partial class percobaanfix1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("e_commerce.Datas.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<string>("NoHp")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("no_hp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("ProfilPicture")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profil_picture");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Alamat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("detail");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Kecamatan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("kecamatan");

                    b.Property<string>("Kelurahan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("kelurahan");

                    b.Property<int>("KodePos")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode_pos");

                    b.Property<string>("Rt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rt");

                    b.Property<string>("Rw")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rw");

                    b.HasKey("Id");

                    b.ToTable("alamat", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("IdAlamat")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_alamat");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_admin");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<string>("NoHp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("no_hp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("ProfilPicture")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("profil_picture");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdAlamat" }, "customer_FK");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("deskripsi");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("icon");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.HasKey("Id");

                    b.ToTable("kategori", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.KategoriProduk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdKategori")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_kategori");

                    b.Property<int>("IdProduk")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_produk");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdKategori" }, "kategori_produk_FK");

                    b.HasIndex(new[] { "IdProduk" }, "kategori_produk_FK_1");

                    b.ToTable("kategori_produk", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Keranjang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_customer");

                    b.Property<int>("IdProduk")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_produk");

                    b.Property<int>("JumlahBarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah_barang");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("sub_total");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdCustomer" }, "keranjang_customer");

                    b.HasIndex(new[] { "IdProduk" }, "keranjang_produk");

                    b.ToTable("keranjang", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Catatan")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("catatan");

                    b.Property<int>("IdAlamat")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_alamat");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_customer");

                    b.Property<int>("IdKeranjang")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_keranjang");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_status");

                    b.Property<decimal?>("JumlahBayar")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("jumlah bayar");

                    b.Property<DateOnly>("TanggalTransaksi")
                        .HasColumnType("date")
                        .HasColumnName("tanggal_transaksi");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdKeranjang" }, "order_FK");

                    b.HasIndex(new[] { "IdAlamat" }, "order_alamat");

                    b.HasIndex(new[] { "IdCustomer" }, "order_customer");

                    b.HasIndex(new[] { "IdStatus" }, "order_status");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Pembayaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_customer");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_order");

                    b.Property<string>("MetodePembayaran")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("metode_pembayaran");

                    b.Property<int?>("Pajak")
                        .HasColumnType("int(11)")
                        .HasColumnName("pajak");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.Property<DateOnly>("Tanggal")
                        .HasColumnType("date")
                        .HasColumnName("tanggal");

                    b.Property<decimal>("TotalBayar")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("total_bayar");

                    b.Property<string>("Tujuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tujuan");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdCustomer" }, "pembayaran_customer");

                    b.HasIndex(new[] { "IdOrder" }, "pembayaran_order");

                    b.ToTable("pembayaran", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Pengiriman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("IdAlamat")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_alamat");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_order");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan");

                    b.Property<string>("Kurir")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("kurir");

                    b.Property<decimal>("Ongkir")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("ongkir");

                    b.Property<int>("Status")
                        .HasColumnType("int(11)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdAlamat" }, "pengiriman_FK");

                    b.HasIndex(new[] { "IdOrder" }, "pengiriman_order");

                    b.ToTable("pengiriman", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Produk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Deskripsi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("deskripsi");

                    b.Property<string>("Gambar")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gambar");

                    b.Property<decimal>("Harga")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("harga");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)")
                        .HasColumnName("stock");

                    b.HasKey("Id");

                    b.ToTable("produk", (string)null);
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.StatusOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("deskripsi");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.HasKey("Id");

                    b.ToTable("status_order", (string)null);
                });


            modelBuilder.Entity("e_commerce.Datas.Entities.Customer", b =>
                {
                    b.HasOne("e_commerce.Datas.Entities.Alamat", "IdAlamatNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("IdAlamat")
                        .HasConstraintName("customer_FK");

                    b.Navigation("IdAlamatNavigation");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.KategoriProduk", b =>
                {
                    b.HasOne("e_commerce.Datas.Entities.Kategori", "IdKategoriNavigation")
                        .WithMany("KategoriProduks")
                        .HasForeignKey("IdKategori")
                        .IsRequired()
                        .HasConstraintName("kategori_produk_FK");

                    b.HasOne("e_commerce.Datas.Entities.Produk", "IdProdukNavigation")
                        .WithMany("KategoriProduks")
                        .HasForeignKey("IdProduk")
                        .IsRequired()
                        .HasConstraintName("kategori_produk_FK_1");

                    b.Navigation("IdKategoriNavigation");

                    b.Navigation("IdProdukNavigation");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Keranjang", b =>
                {
                    b.HasOne("e_commerce.Datas.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("Keranjangs")
                        .HasForeignKey("IdCustomer")
                        .IsRequired()
                        .HasConstraintName("keranjang_customer");

                    b.HasOne("e_commerce.Datas.Entities.Produk", "IdProdukNavigation")
                        .WithMany("Keranjangs")
                        .HasForeignKey("IdProduk")
                        .IsRequired()
                        .HasConstraintName("keranjang_produk");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdProdukNavigation");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Order", b =>
                {
                    b.HasOne("e_commerce.Datas.Entities.Alamat", "IdAlamatNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdAlamat")
                        .IsRequired()
                        .HasConstraintName("order_alamat");

                    b.HasOne("e_commerce.Datas.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdCustomer")
                        .IsRequired()
                        .HasConstraintName("order_customer");

                    b.HasOne("e_commerce.Datas.Entities.Keranjang", "IdKeranjangNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdKeranjang")
                        .IsRequired()
                        .HasConstraintName("order_keranjang");

                    b.HasOne("e_commerce.Datas.Entities.StatusOrder", "IdStatusNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdStatus")
                        .IsRequired()
                        .HasConstraintName("order_status");

                    b.Navigation("IdAlamatNavigation");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdKeranjangNavigation");

                    b.Navigation("IdStatusNavigation");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Pembayaran", b =>
                {
                    b.HasOne("e_commerce.Datas.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("Pembayarans")
                        .HasForeignKey("IdCustomer")
                        .IsRequired()
                        .HasConstraintName("pembayaran_customer");

                    b.HasOne("e_commerce.Datas.Entities.Order", "IdOrderNavigation")
                        .WithMany("Pembayarans")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("pembayaran_order");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdOrderNavigation");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Pengiriman", b =>
                {
                    b.HasOne("e_commerce.Datas.Entities.Alamat", "IdAlamatNavigation")
                        .WithMany("Pengirimen")
                        .HasForeignKey("IdAlamat")
                        .IsRequired()
                        .HasConstraintName("pengiriman_FK");

                    b.HasOne("e_commerce.Datas.Entities.Order", "IdOrderNavigation")
                        .WithMany("Pengirimen")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("pengiriman_order");

                    b.Navigation("IdAlamatNavigation");

                    b.Navigation("IdOrderNavigation");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Alamat", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Orders");

                    b.Navigation("Pengirimen");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Customer", b =>
                {
                    b.Navigation("Keranjangs");

                    b.Navigation("Orders");

                    b.Navigation("Pembayarans");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Kategori", b =>
                {
                    b.Navigation("KategoriProduks");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Keranjang", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Order", b =>
                {
                    b.Navigation("Pembayarans");

                    b.Navigation("Pengirimen");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.Produk", b =>
                {
                    b.Navigation("KategoriProduks");

                    b.Navigation("Keranjangs");
                });

            modelBuilder.Entity("e_commerce.Datas.Entities.StatusOrder", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
